GSSTKCD_PREV = lag(GSSTKCD),
STDAGE_PREV = lag(STDAGE),
RESERVCD_PREV = lag(RESERVCD),
FORINDCD_PREV = lag(FORINDCD),
SITECLCD_PREV = lag(SITECLCD),
LONG_RDDISTCD_PREV = lag(LONG_RDDISTCD),
FORTYPCD_PREV = lag(FORTYPCD),
STDSZCD_PREV = lag(STDSZCD),
OWNCD_PREV = lag(OWNCD),
OWNGRPCD_PREV = lag(OWNGRPCD),
STDORGCD_PREV = lag(STDORGCD),
SICOND_PREV = lag(SICOND),
BA_PREV = lag(BA),
TPA_PREV = lag(TPA),
RD_PREV = lag(RD),
mean_HT_PREV = lag(mean_HT),
LOREY_HT_PREV = lag(LOREY_HT),
VOLBFGRS_PREV = lag(VOLBFGRS),
CARBON_AG_PREV = lag(CARBON_AG),
QMD_PREV = lag(QMD),
TPA_rem_PREV = lag(TPA_rem),
BA_rem_PREV = lag(BA_rem),
BA_rem_5_PREV = lag(BA_rem_5),
RD_rem_PREV = lag(RD_rem),
VOLBFGRS_rem_PREV = lag(VOLBFGRS_rem),
CARBON_AG_rem_PREV = lag(CARBON_AG_rem),
QMD_rem_PREV = lag(QMD_rem)) %>%
select(STATECD, UNITCD, COUNTYCD, PLOT, INVYR, INVYR_PREV, TRTCD_CUT_PREV,
GSSTKCD_PREV, STDAGE_PREV, RESERVCD_PREV, FORINDCD_PREV, SITECLCD_PREV,
SICOND_PREV, LONG_RDDISTCD_PREV, FORTYPCD_PREV, STDSZCD_PREV, OWNCD_PREV,
OWNGRPCD_PREV, STDORGCD_PREV, INVYR_PREV, BA_PREV, TPA_PREV, RD_PREV,
mean_HT_PREV, LOREY_HT_PREV, VOLBFGRS_PREV, CARBON_AG_PREV, QMD_PREV,
TPA_rem_PREV, BA_rem_PREV, BA_rem_5_PREV, RD_rem_PREV, VOLBFGRS_rem_PREV,
CARBON_AG_rem_PREV, QMD_rem_PREV) %>%
arrange(STATECD, UNITCD, COUNTYCD, PLOT, INVYR)
stand_prev
stand <- inner_join(stand, stand_prev,
by = c("STATECD", "UNITCD", "COUNTYCD", "PLOT", "INVYR"))
# Chunk 8
forest_type <- my_reg$REF_FOREST_TYPE %>%
rename(FORTYPCD_PREV = VALUE,
FORTYPCD_NAME_PREV = MEANING,
FORTYPGRPCD_PREV = TYPGRPCD) %>%
select(FORTYPCD_PREV, FORTYPCD_NAME_PREV, FORTYPGRPCD_PREV)
my_reg$REF_FOREST_TYPE
my_reg
REF_FOREST_TYPE <- 'C:/Users/matt/Documents/Arbor/Projects/FFCP/harvesting/data/REF_FOREST_TYPE.csv'
forest_type <- my_reg$REF_FOREST_TYPE %>%
rename(FORTYPCD_PREV = VALUE,
FORTYPCD_NAME_PREV = MEANING,
FORTYPGRPCD_PREV = TYPGRPCD) %>%
select(FORTYPCD_PREV, FORTYPCD_NAME_PREV, FORTYPGRPCD_PREV)
forest_type <- REF_FOREST_TYPE %>%
rename(FORTYPCD_PREV = VALUE,
FORTYPCD_NAME_PREV = MEANING,
FORTYPGRPCD_PREV = TYPGRPCD) %>%
select(FORTYPCD_PREV, FORTYPCD_NAME_PREV, FORTYPGRPCD_PREV)
REF_FOREST_TYPE <- read_csv('C:/Users/matt/Documents/Arbor/Projects/FFCP/harvesting/data/REF_FOREST_TYPE.csv')
forest_type <- REF_FOREST_TYPE %>%
rename(FORTYPCD_PREV = VALUE,
FORTYPCD_NAME_PREV = MEANING,
FORTYPGRPCD_PREV = TYPGRPCD) %>%
select(FORTYPCD_PREV, FORTYPCD_NAME_PREV, FORTYPGRPCD_PREV)
forest_group <- my_reg$REF_FOREST_TYPE_GROUP %>%
rename(FORTYPGRPCD_NAME_PREV = MEANING,
FORTYPGRPCD_PREV = VALUE) %>%
select(FORTYPGRPCD_PREV, FORTYPGRPCD_NAME_PREV)
REF_FOREST_TYPE_GROUP <- read_csv('C:/Users/matt/Documents/Arbor/Projects/FFCP/harvesting/data/REF_FOREST_TYPE_GROUP.csv')
forest_type <- REF_FOREST_TYPE %>%
rename(FORTYPCD_PREV = VALUE,
FORTYPCD_NAME_PREV = MEANING,
FORTYPGRPCD_PREV = TYPGRPCD) %>%
select(FORTYPCD_PREV, FORTYPCD_NAME_PREV, FORTYPGRPCD_PREV)
forest_group <- REF_FOREST_TYPE_GROUP %>%
rename(FORTYPGRPCD_NAME_PREV = MEANING,
FORTYPGRPCD_PREV = VALUE) %>%
select(FORTYPGRPCD_PREV, FORTYPGRPCD_NAME_PREV)
forest <- inner_join(forest_type, forest_group, by = "FORTYPGRPCD_PREV")
stand <- inner_join(stand, forest, by = "FORTYPCD_PREV")
stand <- stand %>%
mutate(ECO_PROV = str_sub(ECOSUBCD, end = -3))
stand <- stand %>%
filter(OWNGRPCD == OWNGRPCD_req &
(INVYR-INVYR_PREV) <= 7,
VOLBFGRS_PREV >= VOLBFGRS_req,
eligible == eligible_req &
VOLBFGRS >= VOLBFGRS_req &
SITECLCD <= SITECLCD_req)
states <- map_data("state")
counties <- map_data("county")
tree_states <- subset(states,
region %in% states_in_region_lower)
tree_counties <- subset(counties,
region %in% states_in_region_lower)
p.plots <- ggplot(data = tree_states,
mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(color = "black", fill = "white") +
geom_polygon(data = tree_counties, color = "grey", fill = "white") +
geom_point(data = stand, aes(x = LON, y = LAT),
color = "red", size = 0.25, inherit.aes = F) +
coord_map("conic", lat0 = 40) +
theme_bw() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank())
p.plots
p_plots <- ggplot(data = tree_states,
mapping = aes(x = long, y = lat, group = group)) +
geom_polygon(color = "black", fill = "white") +
geom_polygon(data = tree_counties, color = "grey", fill = "white") +
geom_point(data = stand, aes(x = LON, y = LAT),
color = "red", size = 0.25, inherit.aes = F) +
coord_map("conic", lat0 = 40) +
theme_bw() +
theme(axis.text = element_blank(),
axis.title = element_blank(),
axis.ticks = element_blank(),
axis.line = element_blank())
p_plots
stand_rem_summ <- stand %>%
group_by(STATECD, rem) %>%
summarize(num_plots = n())
p.rem <- ggplot(stand_rem_summ, aes(x = factor(rem), y = num_plots)) +
geom_bar(stat = "identity") +
facet_wrap(~STATECD) +
labs(y = "Number of FIA plots",
x = "Number of measurements")
p.rem
state_remper <- stand %>%
group_by(STATECD) %>%
summarize(avg_remper = mean(INVYR-INVYR_PREV))
state_remper
stand <- inner_join(stand, state_remper, by = "STATECD")
stand <- stand %>%
mutate(# Approach 1: Relative density, stand level (CUTTING_RD_STAND):
RD_change = RD_PREV - RD,
CUTTING_RD_MAIN = ifelse(RD_change >= 0.10, "YES", "NO"),
CUTTING_RD_STAND = ifelse(CUTTING_RD_MAIN %in% c("YES") &
DIST %in% c("NO"), "YES", "NO"),
CUTTING_RD_STAND_NAME = ifelse(CUTTING_RD_STAND == "YES",
"CUTTING_RD_STAND = YES",
"CUTTING_RD_STAND = NO"),
#Approach 2: Relative density, tree level (CUTTING_RD_TREE):
RD_change_TREE = (RD_rem + RD) - RD,
CUTTING_RD_TREE_MAIN = ifelse(RD_change_TREE >= 0.10, "YES", "NO"),
CUTTING_RD_TREE = ifelse(CUTTING_RD_TREE_MAIN %in% c("YES") &
DIST %in% c("NO"), "YES", "NO"),
CUTTING_RD_TREE_NAME = ifelse(CUTTING_RD_TREE == "YES",
"CUTTING_RD_TREE = YES",
"CUTTING_RD_TREE = NO"),
# Approach 3: Basal area, stand level (CUTTING_BA_STAND):
BA_change = ((BA_PREV - BA)/BA_PREV),
CUTTING_BA_MAIN = ifelse(BA_change >= 0.10, "YES", "NO"),
CUTTING_BA_STAND = ifelse(CUTTING_BA_MAIN %in% c("YES") &
DIST %in% c("NO"), "YES", "NO"),
CUTTING_BA_STAND_NAME = ifelse(CUTTING_BA_STAND == "YES",
"CUTTING_BA_STAND = YES",
"CUTTING_BA_STAND = NO"),
# Approach 3.5: Basal area, stand level > 25% (CUTTING_BA_25_STAND):
BA_change = ((BA_PREV - BA)/BA_PREV),
CUTTING_BA_25_MAIN = ifelse(BA_change >= 0.25, "YES", "NO"),
CUTTING_BA_25_STAND = ifelse(CUTTING_BA_25_MAIN %in% c("YES") &
DIST %in% c("NO"), "YES", "NO"),
CUTTING_BA_25_STAND_NAME = ifelse(CUTTING_BA_25_STAND == "YES",
"CUTTING_BA_25_STAND = YES",
"CUTTING_BA_25_STAND = NO"),
# Approach 4: Basal area, tree level (CUTTING_BA_TREE):
BA_change_TREE = (BA_rem + BA) - BA,
CUTTING_BA_TREE_MAIN = ifelse(BA_change_TREE >= 0.10, "YES", "NO"),
CUTTING_BA_TREE = ifelse(CUTTING_BA_TREE_MAIN %in% c("YES") &
DIST %in% c("NO"), "YES", "NO"),
CUTTING_BA_TREE_NAME = ifelse(CUTTING_BA_TREE == "YES",
"CUTTING_BA_TREE = YES",
"CUTTING_BA_TREE = NO"),
# Approach 5: Treatment code (TRTCD_CUT):
CUTTING_TRTCD_MAIN = ifelse(TRTCD_CUT == "TRTCD_CUT", "YES", "NO"),
CUTTING_TRTCD = ifelse(CUTTING_TRTCD_MAIN %in% c("YES") &
DIST %in% c("NO"), "YES", "NO"),
CUTTING_TRTCD_NAME = ifelse(CUTTING_TRTCD == "YES",
"CUTTING_TRTCD = YES",
"CUTTING_TRTCD = NO"),
# Approach 5.5: Basal area removed > 25% (CUTTING_BA_25_STAND) AND
# TRTCD_CUT:
BA_change = ((BA_PREV - BA)/BA_PREV),
CUTTING_BA_25_STAND_TRTCD = ifelse(CUTTING_BA_25_STAND == "YES" |
(CUTTING_TRTCD == "YES" & BA_change > 0),
"YES", "NO"),
CUTTING_BA_25_STAND_TRTCD_NAME = ifelse(CUTTING_BA_25_STAND_TRTCD == "YES",
"CUTTING_BA_25_STAND_TRTCD = YES",
"CUTTING_BA_25_STAND_TRTCD = NO"),
)
stand_cutting_rd <- stand %>%
group_by(CUTTING_RD_STAND) %>%
summarize(num_cut_cond = n()) %>%
mutate(Pct = num_cut_cond / sum(num_cut_cond) * 100)
stand_cutting_rd
tree_cutting_rd <- stand %>%
group_by(CUTTING_RD_TREE) %>%
summarize(num_cut_cond = n()) %>%
mutate(Pct = num_cut_cond / sum(num_cut_cond) * 100)
tree_cutting_rd
stand_cutting_ba <- stand %>%
group_by(CUTTING_BA_STAND) %>%
summarize(num_cut_cond = n()) %>%
mutate(Pct = num_cut_cond / sum(num_cut_cond) * 100)
stand_cutting_ba
stand_cutting_ba_25 <- stand %>%
group_by(CUTTING_BA_25_STAND) %>%
summarize(num_cut_cond = n()) %>%
mutate(Pct = num_cut_cond / sum(num_cut_cond) * 100)
stand_cutting_ba_25
tree_cutting_ba <- stand %>%
group_by(CUTTING_BA_TREE) %>%
summarize(num_cut_cond = n()) %>%
mutate(Pct = num_cut_cond / sum(num_cut_cond) * 100)
tree_cutting_ba
stand_cutting_trtcd <- stand %>%
group_by(CUTTING_TRTCD) %>%
summarize(num_cut_cond = n()) %>%
mutate(Pct = num_cut_cond / sum(num_cut_cond) * 100)
stand_cutting_trtcd
stand_cutting_ba_25_trtcd <- stand %>%
group_by(CUTTING_BA_25_STAND_TRTCD) %>%
summarize(num_cut_cond = n()) %>%
mutate(Pct = num_cut_cond / sum(num_cut_cond) * 100)
stand_cutting_ba_25_trtcd
# How do harvest definitions agree with TRTCD?
m1 <- table(stand$CUTTING_RD_STAND, stand$CUTTING_TRTCD)
(m1[2, 2]/stand_cutting_trtcd[2,2])*100
((stand_cutting_rd[2,3]/100)*20)/avg_remper
stand_cut_type <- stand %>%
filter(CUTTING_BA_25_STAND_TRTCD == "YES" &
FORTYPGRPCD_PREV %in% FORTYPGRPCD_req) %>%
mutate(BA_REMOVED = BA_PREV - BA,
BA_REMOVED_PCT = ((BA_PREV - BA)/BA_PREV)*100,
HarvestType = ifelse(BA_REMOVED_PCT >= 70, "Clearcut", "Thinning"),
STAND_ID = paste(STATECD, COUNTYCD, PLOT, INVYR_PREV, sep="_")) %>%
select(STAND_ID, BA_PREV, BA_REMOVED, BA_REMOVED_PCT, FORTYPGRPCD_NAME_PREV, HarvestType, OWNCD) %>%
relocate(STAND_ID)
stand_cut_type <- stand %>%
filter(CUTTING_BA_25_STAND_TRTCD == "YES") %>%
mutate(BA_REMOVED = BA_PREV - BA,
BA_REMOVED_PCT = ((BA_PREV - BA)/BA_PREV)*100,
HarvestType = ifelse(BA_REMOVED_PCT >= 70, "Clearcut", "Thinning"),
STAND_ID = paste(STATECD, COUNTYCD, PLOT, INVYR_PREV, sep="_")) %>%
select(STAND_ID, BA_PREV, BA_REMOVED, BA_REMOVED_PCT, FORTYPGRPCD_NAME_PREV, HarvestType, OWNCD) %>%
relocate(STAND_ID)
stand_cut_fortype <- stand_cut_type %>%
group_by(OWNCD) %>%
summarize(num_plots = n(),
mean_BA_REMOVED = mean(BA_REMOVED),
min_BA_REMOVED = min(BA_REMOVED),
max_BA_REMOVED = max(BA_REMOVED),
sd_BA_REMOVED = sd(BA_REMOVED),
mean_BA_REMOVED_PCT = mean(BA_REMOVED_PCT),
min_BA_REMOVED_PCT = min(BA_REMOVED_PCT),
max_BA_REMOVED_PCT = max(BA_REMOVED_PCT),
sd_BA_REMOVED_PCT = sd(BA_REMOVED_PCT)) %>%
arrange(desc(num_plots))
stand_cut_fortype
stand_cut_fortype <- stand_cut_type %>%
group_by(OWNGRPCD) %>%
summarize(num_plots = n(),
mean_BA_REMOVED = mean(BA_REMOVED),
min_BA_REMOVED = min(BA_REMOVED),
max_BA_REMOVED = max(BA_REMOVED),
sd_BA_REMOVED = sd(BA_REMOVED),
mean_BA_REMOVED_PCT = mean(BA_REMOVED_PCT),
min_BA_REMOVED_PCT = min(BA_REMOVED_PCT),
max_BA_REMOVED_PCT = max(BA_REMOVED_PCT),
sd_BA_REMOVED_PCT = sd(BA_REMOVED_PCT)) %>%
arrange(desc(num_plots))
stand_cut_type <- stand %>%
filter(CUTTING_BA_25_STAND_TRTCD == "YES") %>%
mutate(BA_REMOVED = BA_PREV - BA,
BA_REMOVED_PCT = ((BA_PREV - BA)/BA_PREV)*100,
HarvestType = ifelse(BA_REMOVED_PCT >= 70, "Clearcut", "Thinning"),
STAND_ID = paste(STATECD, COUNTYCD, PLOT, INVYR_PREV, sep="_")) %>%
select(STAND_ID, BA_PREV, BA_REMOVED, BA_REMOVED_PCT, FORTYPGRPCD_NAME_PREV, HarvestType, OWNGRPCD) %>%
relocate(STAND_ID)
stand_cut_fortype <- stand_cut_type %>%
group_by(OWNGRPCD) %>%
summarize(num_plots = n(),
mean_BA_REMOVED = mean(BA_REMOVED),
min_BA_REMOVED = min(BA_REMOVED),
max_BA_REMOVED = max(BA_REMOVED),
sd_BA_REMOVED = sd(BA_REMOVED),
mean_BA_REMOVED_PCT = mean(BA_REMOVED_PCT),
min_BA_REMOVED_PCT = min(BA_REMOVED_PCT),
max_BA_REMOVED_PCT = max(BA_REMOVED_PCT),
sd_BA_REMOVED_PCT = sd(BA_REMOVED_PCT)) %>%
arrange(desc(num_plots))
stand_cut_fortype
p.cut_type <- stand_cut_type %>%
filter(HarvestType != "No cutting") %>%
ggplot(aes(x = BA_PREV, y = BA_REMOVED_PCT, col = factor(OWNCD))) +
geom_point() +
stat_smooth(method = "lm") +
labs(x = "Basal area (time 1)",
y = " % basal area removed")
p.cut_type
p.cut_type <- stand_cut_type %>%
filter(HarvestType != "No cutting") %>%
ggplot(aes(x = BA_PREV, y = BA_REMOVED_PCT, col = factor(OWNGRPCD))) +
geom_point() +
stat_smooth(method = "lm") +
labs(x = "Basal area (time 1)",
y = " % basal area removed")
p.cut_type
p.cut <- stand_cut_type %>%
filter(HarvestType != "No cutting" ) %>%
ggplot(aes(x = BA_PREV, y = BA_REMOVED_PCT)) +
geom_point() +
facet_grid(~FORTYPGRPCD_NAME_PREV) +
stat_smooth(method = "lm") +
labs(x = "Basal area (time 1)",
y = " % basal area removed")
p.cut
stand_cut <- stand %>%
filter(CUTTING_BA_25_STAND_TRTCD == "YES") %>%
mutate(BA_REMOVED = BA_PREV - BA,
BA_REMOVED_PCT = ((BA_PREV - BA)/BA_PREV)*100,
HarvestType = ifelse(BA_REMOVED_PCT >= 70, "Clearcut", "Thinning"),
STAND_ID = paste(STATECD, COUNTYCD, PLOT, INVYR_PREV, sep="_")) %>%
select(STAND_ID, INVYR, INVYR_PREV, BA, BA_PREV, BA_REMOVED, BA_REMOVED_PCT, RD, RD_PREV, RD_change, FORTYPGRPCD_NAME_PREV, HarvestType, CUTTING_BA_25_STAND, CUTTING_TRTCD,
CUTTING_BA_25_STAND_TRTCD) %>%
relocate(STAND_ID)
summary(stand_cut$INVYR-stand_cut$INVYR_PREV)
summary(stand_cut$BA_REMOVED)
summary(stand_cut$BA_REMOVED_PCT)
table(stand_cut$HarvestType)
stand_cut_methods <- stand_cut %>%
group_by(CUTTING_BA_25_STAND, CUTTING_TRTCD) %>%
summarize(num_plots = n()) %>%
mutate(Pct = num_plots / sum(num_plots)*100)
stand_cut_methods
stand_cut_harvtype <- stand_cut %>%
group_by(FORTYPGRPCD_NAME_PREV, HarvestType) %>%
summarize(num_plots = n(),
mean_BA_REMOVED = mean(BA_REMOVED),
min_BA_REMOVED = min(BA_REMOVED),
max_BA_REMOVED = max(BA_REMOVED),
sd_BA_REMOVED = sd(BA_REMOVED),
mean_BA_REMOVED_PCT = mean(BA_REMOVED_PCT),
min_BA_REMOVED_PCT = min(BA_REMOVED_PCT),
max_BA_REMOVED_PCT = max(BA_REMOVED_PCT),
sd_BA_REMOVED_PCT = sd(BA_REMOVED_PCT)) %>%
arrange(desc(num_plots))
stand_cut_harvtype
p.stand_cut <- stand_cut %>%
ggplot(aes(x = BA_PREV, y = BA_REMOVED_PCT)) +
geom_point() +
stat_smooth(method = "lm", se = F) +
facet_wrap(~FORTYPGRPCD_NAME_PREV) +
labs(x = "Basal area (time 1)",
y = " % basal area removed")
p.stand_cut
p.stand_cut <- stand_cut %>%
ggplot(aes(x = BA_REMOVED_PCT, y = RD_change)) +
geom_point() +
stat_smooth(method = "lm", se = F) +
facet_wrap(~FORTYPGRPCD_NAME_PREV) +
labs(x = "% BA removed",
y = " % RD removed")
p.stand_cut
stand_fortype <- stand %>%
unite(col='StandID', c('STATECD', 'COUNTYCD', 'PLOT', 'INVYR'), sep='_') %>%
select(StandID, FORTYPGRPCD_NAME_PREV, CUTTING_BA_25_STAND_TRTCD)
stand_fortype
stand <- stand %>%
mutate(d_D = QMD_rem/QMD_PREV,
QMD_diff = QMD-QMD_PREV,
QMD_diff_pct = (QMD_diff/(QMD_PREV+0.00001))*100,
BA_REMOVED = BA_PREV - BA,
BA_REMOVED_PCT = ((BA_PREV - BA)/BA_PREV)*100,
GMF_like_thin = ifelse(BA_REMOVED_PCT <= 25, "YES", "NO"),
HarvestType = ifelse(BA_REMOVED_PCT >= 70, "Clearcut", "Thinning"))
stats_ci <- stand %>%
group_by(FORTYPGRPCD_NAME_PREV, HarvestType) %>%
summarise(num_plot = sum(CUTTING_BA_25_STAND_TRTCD == "YES"),
mean_d_D = mean(d_D, na.rm = T),
sd_d_D = sd(d_D, na.rm = T),
low_ci = mean_d_D - (sd_d_D * 1.96)/sqrt(num_plot),
up_ci = mean_d_D + (sd_d_D * 1.96)/sqrt(num_plot),
mean_QMD = mean(QMD),
mean_QMD_PREV = mean(QMD_PREV),
mean_QMD_diff = mean(QMD_diff),
sd_QMD_diff = sd(QMD_diff),
mean_QMD_diff_pct = mean(QMD_diff_pct),
sd_QMD_diff_pct = sd(QMD_diff_pct)) %>%
filter(FORTYPGRPCD_NAME_PREV %in% FORTYPGRP_req)
stats_ci <- stand %>%
group_by(FORTYPGRPCD_NAME_PREV, HarvestType) %>%
summarise(num_plot = sum(CUTTING_BA_25_STAND_TRTCD == "YES"),
mean_d_D = mean(d_D, na.rm = T),
sd_d_D = sd(d_D, na.rm = T),
low_ci = mean_d_D - (sd_d_D * 1.96)/sqrt(num_plot),
up_ci = mean_d_D + (sd_d_D * 1.96)/sqrt(num_plot),
mean_QMD = mean(QMD),
mean_QMD_PREV = mean(QMD_PREV),
mean_QMD_diff = mean(QMD_diff),
sd_QMD_diff = sd(QMD_diff),
mean_QMD_diff_pct = mean(QMD_diff_pct),
sd_QMD_diff_pct = sd(QMD_diff_pct))
stats_ci
stats_ci2 <- stand %>%
group_by(FORTYPGRPCD_NAME_PREV, GMF_like_thin) %>%
summarise(num_plot = sum(CUTTING_BA_25_STAND_TRTCD == "YES"),
mean_d_D = mean(d_D, na.rm = T),
sd_d_D = sd(d_D, na.rm = T),
low_ci = mean_d_D - (sd_d_D * 1.96)/sqrt(num_plot),
up_ci = mean_d_D + (sd_d_D * 1.96)/sqrt(num_plot),
mean_QMD = mean(QMD),
mean_QMD_PREV = mean(QMD_PREV),
mean_QMD_diff = mean(QMD_diff),
sd_QMD_diff = sd(QMD_diff),
mean_QMD_diff_pct = mean(QMD_diff_pct),
sd_QMD_diff_pct = sd(QMD_diff_pct)) %>%
filter(FORTYPGRPCD_NAME_PREV %in% FORTYPGRP_req)
stats_ci2 <- stand %>%
group_by(FORTYPGRPCD_NAME_PREV, GMF_like_thin) %>%
summarise(num_plot = sum(CUTTING_BA_25_STAND_TRTCD == "YES"),
mean_d_D = mean(d_D, na.rm = T),
sd_d_D = sd(d_D, na.rm = T),
low_ci = mean_d_D - (sd_d_D * 1.96)/sqrt(num_plot),
up_ci = mean_d_D + (sd_d_D * 1.96)/sqrt(num_plot),
mean_QMD = mean(QMD),
mean_QMD_PREV = mean(QMD_PREV),
mean_QMD_diff = mean(QMD_diff),
sd_QMD_diff = sd(QMD_diff),
mean_QMD_diff_pct = mean(QMD_diff_pct),
sd_QMD_diff_pct = sd(QMD_diff_pct))
stats_ci2
p.vio <- stand %>%
filter(QMD_PREV >= 5 & QMD_rem >= 5 &
FORTYPGRPCD_NAME_PREV %in% c(FORTYPGRP_req)) %>%
ggplot() +
geom_violin(mapping = aes(x = FORTYPGRPCD_NAME_PREV, y = d_D, fill = FORTYPGRPCD_NAME_PREV)) +
geom_point(stats_ci, mapping = aes(x = FORTYPGRPCD_NAME_PREV, y = mean_d_D)) +
geom_errorbar(stats_ci, mapping = aes(x = FORTYPGRPCD_NAME_PREV,
ymin = low_ci, ymax = up_ci), width = 0.2) +
labs(x = "",
y = "QMD removed / Pre-harvest QMD",
caption = "n = 7 CC MMB; n = 13 CC OH; n = 124 THIN MBB; n = 154 THIN OH") +
annotate("text", label = "Thin from above", x = 1.5, y = 2, col = "blue") +
annotate("text", label = "Thin from below", x = 1.5, y = 0.5, col = "blue") +
geom_hline(yintercept = 1, col = "red", linetype = 2) +
facet_grid(~HarvestType) +
theme(legend.position = "none")
p.vio <- stand %>%
filter(QMD_PREV >= 5 & QMD_rem >= 5) |>
ggplot() +
geom_violin(mapping = aes(x = FORTYPGRPCD_NAME_PREV, y = d_D, fill = FORTYPGRPCD_NAME_PREV)) +
geom_point(stats_ci, mapping = aes(x = FORTYPGRPCD_NAME_PREV, y = mean_d_D)) +
geom_errorbar(stats_ci, mapping = aes(x = FORTYPGRPCD_NAME_PREV,
ymin = low_ci, ymax = up_ci), width = 0.2) +
labs(x = "",
y = "QMD removed / Pre-harvest QMD",
caption = "n = 7 CC MMB; n = 13 CC OH; n = 124 THIN MBB; n = 154 THIN OH") +
annotate("text", label = "Thin from above", x = 1.5, y = 2, col = "blue") +
annotate("text", label = "Thin from below", x = 1.5, y = 0.5, col = "blue") +
geom_hline(yintercept = 1, col = "red", linetype = 2) +
facet_grid(~HarvestType) +
theme(legend.position = "none")
p.vio
stand
p.vio <- stand %>%
filter(QMD_PREV >= 5 & QMD_rem >= 5) %>%
ggplot() +
geom_violin(mapping = aes(x = FORTYPGRPCD_NAME_PREV, y = d_D, fill = FORTYPGRPCD_NAME_PREV)) +
geom_point(stats_ci, mapping = aes(x = FORTYPGRPCD_NAME_PREV, y = mean_d_D)) +
geom_errorbar(stats_ci, mapping = aes(x = FORTYPGRPCD_NAME_PREV,
ymin = low_ci, ymax = up_ci), width = 0.2) +
labs(x = "",
y = "QMD removed / Pre-harvest QMD",
caption = "n = 7 CC MMB; n = 13 CC OH; n = 124 THIN MBB; n = 154 THIN OH") +
annotate("text", label = "Thin from above", x = 1.5, y = 2, col = "blue") +
annotate("text", label = "Thin from below", x = 1.5, y = 0.5, col = "blue") +
geom_hline(yintercept = 1, col = "red", linetype = 2) +
facet_grid(~HarvestType) +
theme(legend.position = "none")
p.vio
p.vio <- stand %>%
filter(QMD_PREV >= 5 & QMD_rem >= 5) |>
ggplot() +
geom_violin(mapping = aes(x = FORTYPGRPCD_NAME_PREV, y = d_D, fill = FORTYPGRPCD_NAME_PREV)) +
geom_point(stats_ci, mapping = aes(x = FORTYPGRPCD_NAME_PREV, y = mean_d_D)) +
geom_errorbar(stats_ci, mapping = aes(x = FORTYPGRPCD_NAME_PREV,
ymin = low_ci, ymax = up_ci), width = 0.2) +
labs(x = "",
y = "QMD removed / Pre-harvest QMD",
caption = "n = 7 CC MMB; n = 13 CC OH; n = 124 THIN MBB; n = 154 THIN OH") +
#annotate("text", label = "Thin from above", x = 1.5, y = 2, col = "blue") +
# annotate("text", label = "Thin from below", x = 1.5, y = 0.5, col = "blue") +
geom_hline(yintercept = 1, col = "red", linetype = 2) +
facet_grid(~HarvestType) +
theme(legend.position = "none")
p.vio
stand
stand <- stand %>%
mutate(d_D = QMD_rem/QMD_PREV,
QMD_diff = QMD-QMD_PREV,
QMD_diff_pct = (QMD_diff/(QMD_PREV+0.00001))*100,
BA_REMOVED = BA_PREV - BA,
BA_REMOVED_PCT = ((BA_PREV - BA)/BA_PREV)*100,
GMF_like_thin = ifelse(BA_REMOVED_PCT <= 25, "YES", "NO"),
HarvestType = ifelse(BA_REMOVED_PCT >= 70, "Clearcut", "Thinning"))
View(stand)
stand$QMD_rem
QMD_PREV
stand$QMD_PREV
